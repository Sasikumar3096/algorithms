import java.util.LinkedList;
import java.util.ListIterator;

public class Dfs {
	LinkedList<Integer> mat[];
	boolean visited[];
	Dfs(int n){
		mat=new LinkedList[n];
		visited = new boolean[n];
		for(int i=0;i<n;i++)
			mat[i]=new LinkedList();
		int i=0;
		dfsScan(i);
	}
	private void dfsScan(int n) {
	         System.out.println(n);
	         visited[n]=true;
		ListIterator<Integer> i = mat[n].listIterator();
		while(i.hasNext()){
			int index = i.next();
   
			if(visited[index]!=true){
				dfsScan(index);
			}
		}
		
	}
	void add_edge(int v,int n)
	{
		mat[v].add(n);
	}
	public static void main(String args[]){
		Dfs dfs = new Dfs(4);
		dfs.add_edge(0, 1);
		dfs.add_edge(0,2);
		dfs.add_edge(1,2);
		dfs.add_edge(2,0);
		dfs.add_edge(2,3);
		dfs.add_edge(3,3);
		dfs.dfsScan(0);
	}

}
